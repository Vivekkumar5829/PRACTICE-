// 1. 1108. Defanging an IP Address.
    public static String defangIPaddr(String address) {
        StringBuilder str = new StringBuilder();  //StringBuilder is faster than StringBuffer(because of properties StringBuffer have thread-safe and synchronized).
        for(int i = 0; i < address.length(); i++){
            if(address.charAt(i) == '.'){
                str.append("[.]");
            }else {
                str.append(address.charAt(i));
            }
        }
        return str.toString();
    }

// 2. 1528. Shuffle String.
    public static String restoreString(String s, int[] indices) {
       char[] cha = new char[s.length()];
        for(int i =  0; i < s.length(); i++){
            cha[indices[i]] = s.charAt(i);
        }
        return new String(cha);
    }


// 3. 1678. Goal Parser Interpretation.
    public static String interpret(String command) {
        StringBuilder str = new StringBuilder();
        for(int i = 0; i < command.length(); i++){
            if(command.charAt(i) == '(' && command.charAt(i+1) == ')'){
                str.append("o");
                i++;
            }else if(command.charAt(i) == '(' && command.charAt(i+1) == 'a' && command.charAt(i+2) == 'l' && command.charAt(i + 3) == ')'){
                str.append("al");
                i = i+3;
            } else{
                str.append(command.charAt(i));
            }
        }
        return str.toString();
    }


// 4. 1859. Sorting the Sentence.
    public static String  sortSentence(String s) {
        String[] str = s.split(" ");
        String[] result = new String[str.length];
        for(int i = 0; i < str.length; i++){
            int k = Character.getNumericValue(str[i].charAt(str[i].length() - 1));
            result[k- 1] = str[i].substring(0,str[i].length() -1);
        }
       StringBuilder strr = new StringBuilder();
        for(int i = 0; i < result.length; i++){
            strr.append(result[i]).append(" ");
        }
    return strr.toString().trim();
    }


// 5. 1662. Check If Two String Arrays are Equivalent.
    public static boolean   arrayStringsAreEqual(String[] word1, String[] word2) {
        StringBuilder str1 = new StringBuilder();
        StringBuilder str2 = new StringBuilder();
        for(int i = 0 ; i < word1.length; i++){
            str1.append(word1[i]);
        }
        for(int i = 0 ; i < word2.length; i++){
            str2.append(word2[i]);
        }
        String str3 = str1.toString();
        String str4 = str2.toString();
        return str3.equals(str4);
    }


// 6. 709 To Lower Case.
    public static String toLowerCase(String s) {
        StringBuilder str = new StringBuilder(s);
        for (int i = 0; i < str.length(); i++) {
            Character ch = str.charAt(i);
            if (Character.isUpperCase(ch)) {
                str.replace(i, i + 1,
                        Character.toLowerCase(ch) + "");
            }
    }
        return str.toString();
    }


  // 7. 1704. Determine if String Halves Are Alike.
    public static boolean halvesAreAlike(String s) {
        String str1 = s.substring(0, s.length() / 2);
        String str2 = s.substring(s.length() / 2);
        int count1 = 0;
        int count2 = 0;
        for (int i = 0; i < s.length() / 2; i++) {
            char ch = str1.charAt(i);
            char ch1 = str2.charAt(i);
            if (isVowel(ch)) {
                count1++;
            }
            if (isVowel(ch1)) {
                count2++;
            }
        }
        if (count1 == count2)
            return true;
        return false;
    }

    public static boolean isVowel(char ch) {
        return switch (ch) {
            case 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' -> true;
            default -> false;
        };
    }


 // 8. 1309. Decrypt String from Alphabet to Integer Mapping.
    public static String freqAlphabets(String s) {
        StringBuilder result = new StringBuilder();
        for(int i = s.length() - 1; i >= 0; i--){
            int number;
            if(s.charAt(i) == '#'){
                number = (s.charAt(i - 2) - '0') * 10 + (s.charAt(i - 1) - '0');
                i = i - 2;
            }else {
                number = s.charAt(i) - '0';
            }
            result.append((char) (number + 96));
        }
       return result.reverse().toString();
    }


// 9. 1967. Number of Strings That Appear as Substrings in Word.
    public static int numOfStrings(String[] patterns, String word) {
        int count = 0;
        for(String s : patterns){
            boolean isPresent = word.contains(s);
            if(isPresent)
                count++;
        }
        return count;
    }


// 10. 657 Robot Return to Origin
   public static boolean judgeCircle(String moves) {
        int[] count = {0,0};
        for(int i = 0; i < moves.length(); i++){
            if(moves.charAt(i) == 'R'){
                count[0] += 1;
            }else if(moves.charAt(i) == 'L'){
                count[0] -= 1;
            }else if(moves.charAt(i) == 'U'){
                count[1] += 1;
            }else{
                count[1] -= 1;
            }
        }
        if(count[0] == 0 && count[1] == 0){
            return true;
        }
        return false;
   }
