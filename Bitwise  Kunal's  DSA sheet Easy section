// 1. Check a number is odd or not.
public static boolean isOdd(int num){
        return (num & 1) == 1;
    }

// 2. Check a number is even or not.
 public static boolean isEven(int num){
        return (num & 1) == 0 ;
    }


    // 3. Which number appears once.
    public static int appearsOnce(int[] nums){
        int once = 0;
        for(int i : nums){
           once ^= i;
        }
        return once;
    }



    // 4. Find the 5th bit.
    public static int bitNo(int num){
        return  num & (num << num - 1);
    }


 // 5. Set the ith bit. 1 --> 0 or 0 --> 1.
    public static int setBit(int num){
        return num | (num << num - 1);
    }


    // 6. Reset the 5th bit, 1 --> 0 or 0 --> 1.
    public static int reserBit(int num){
        int n = ~(1 << num - 1);
        return num & n;
    }


    // 7. Magic number.
    public static int magicNumber(int n){
        int ans = 0;
        int base = 5;
        while (n > 0){
            int last = n & 1;
            n = n >> 1;
            ans += last * base;
            base = base * 5;
        }
        return ans;
    }



    // 8. Find number of digits in the number.
    public static int noOfDigits(int num, int base){
        return (int)(Math.log(num) / Math.log(base)) + 1;
    }

